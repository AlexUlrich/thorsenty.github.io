!function(a,b){var c=new Firebase("https://sweltering-torch-73.firebaseio.com/"),d=[{name:"Mountain Goat",cards:[{text:"0",val:0},{text:"1/2",val:.5},{text:"1",val:1},{text:"2",val:2},{text:"3",val:3},{text:"5",val:5},{text:"8",val:8},{text:"13",val:13},{text:"20",val:20},{text:"40",val:40},{text:"100",val:100},{text:"?",val:-1},{text:"Cafe",val:-1}]},{name:"Fibonacci",cards:[{text:"0",val:0},{text:"1",val:1},{text:"2",val:2},{text:"3",val:3},{text:"5",val:5},{text:"8",val:8},{text:"13",val:13},{text:"21",val:21},{text:"34",val:34},{text:"55",val:55},{text:"89",val:89},{text:"?",val:-1}]},{name:"Sequential",cards:[{text:"0",val:0},{text:"1",val:1},{text:"2",val:2},{text:"3",val:3},{text:"4",val:4},{text:"5",val:5},{text:"6",val:6},{text:"7",val:7},{text:"8",val:8},{text:"9",val:9},{text:"10",val:10},{text:"?",val:-1}]},{name:"T-Shirt",cards:[{text:"XS",val:1},{text:"S",val:2},{text:"M",val:3},{text:"L",val:4},{text:"XL",val:5},{text:"?",val:-1}]}];b.module("thorsent",["ngRoute","ngMaterial","firebase"]).config(["$routeProvider",function(a){a.when("/",{controller:"LandingCtrl",templateUrl:"/planning-poker/landing.html"}).when("/:roomId/",{controller:"RoomCtrl",templateUrl:"/planning-poker/room.html"}).otherwise({redirectTo:"/"})}]).factory("RoomHelper",["$q","$firebase",function(a,b){return{checkIfRoomExists:function(b){var d=a.defer();return c.child("rooms").child(b).once("value",function(a){exists=null!==a.val(),d.resolve(exists)}),d.promise},generateRoomId:function(){return Math.floor(999e5*Math.random()+1e5).toString()},generateUserId:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"===a?b:3&b|8;return c.toString(16)})},getRoom:function(a){var d=c.child("rooms").child(a);return b(d).$asObject()},getUser:function(a,d){var e=c.child("rooms").child(a).child("users").child(d);return b(e).$asObject()},newRoom:function(a,d){b(c.child("rooms").child(a)).$set({deckIndex:d})},newUser:function(a,d,e){b(c.child("rooms").child(a).child("users").child(d)).$set({leader:e,voter:!0})}}}]).controller("LandingCtrl",["$rootScope","$scope","$location","$firebase","RoomHelper",function(a,b,c,d,e){b.joinRoom=function(){c.path("/"+b.roomId)},b.newRoom=function(){var b=e.generateRoomId(),d=0;e.newRoom(b,d);var f=e.generateUserId(),g=!0;e.newUser(b,f,g),a.uuid=f,c.path("/"+b)}}]).controller("RoomCtrl",["$rootScope","$scope","$routeParams","$location","RoomHelper",function(b,e,f,g,h){function i(){e.user.leader?c.child("rooms").child(e.room.$id).remove():c.child("rooms").child(e.room.$id).child("users").child(e.user.$id).remove(),b.uuid=null}e.changeDeck=function(){e.room.$save()},e.toggleVoter=function(){e.user.$save()},e.$watch("room.deckIndex",function(){e.selectedDeck=d[e.room.deckIndex].cards});var j=f.roomId,k=b.uuid;h.checkIfRoomExists(j).then(function(a){if(a){if(e.room=h.getRoom(j),!k){k=h.generateUserId();var b=!1;h.newUser(j,k,b)}e.user=h.getUser(j,k),e.cardDecks=d,e.selectedDeckIndex=0,e.selectedDeck=d[e.selectedDeckIndex].cards}else g.path("/")}),e.$on("$locationChangeStart",function(){i()}),a.onbeforeunload=function(){i()},e.$on("$destroy",function(){delete a.onbeforeunload})}])}(window,window.angular);